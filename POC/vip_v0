#!/bin/bash

# Script de recurso personalizado para Pacemaker

: ${OCF_ROOT=/usr/lib/ocf}
: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/lib/heartbeat}
. ${OCF_FUNCTIONS_DIR}/ocf-shellfuncs
OCF_RESKEY_status_op="monitor"

ENI_ID=i-00000000000
INSTANCE_ID=
VIP=192.168.1.3

meta_data() {
    cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="mi-recurso-personalizado">
  <version>1.0</version>
  <longdesc lang="es">
    Recurso personalizado para mi aplicación específica
  </longdesc>
  <shortdesc lang="es">Mi recurso personalizado</shortdesc>
  <parameters>
    <parameter name="status_op" unique="0">
      <longdesc lang="es">
        Operación de monitoreo personalizada
      </longdesc>
      <shortdesc lang="es">Operación de monitoreo</shortdesc>
      <content type="string" default="monitor"/>
    </parameter>
  </parameters>
  <actions>
    <action name="start" timeout="20s"/>
    <action name="stop" timeout="20s"/>
    <action name="monitor" timeout="20s" interval="10s"/>
    <action name="meta-data" timeout="5s"/>
  </actions>
</resource-agent>
END
}

start() {
    attachment_id=$(aws ec2 describe-network-interfaces --network-interface-ids $ENI_ID --query 'NetworkInterfaces[0].Attachment.AttachmentId' --output text)

    if [ "$attachment_id" == "None" ]; then
      echo "La variable tiene el valor None"
    else
      aws ec2 detach-network-interface --attachment-id $attachment_id
      sleep 15
    fi

    aws ec2 attach-network-interface --network-interface-id $ENI_ID --instance-id $INSTANCE_ID --device-index 1
    sleep 10

    if [ $? -eq 0 ]; then
        return $OCF_SUCCESS
    else
        return $OCF_ERR_GENERIC
    fi
}

stop() {
    attachment_id=$(aws ec2 describe-network-interfaces --network-interface-ids $ENI_ID --query 'NetworkInterfaces[0].Attachment.AttachmentId' --output text)

    if [ "$attachment_id" == "None" ]; then
      echo "La variable tiene el valor None"
    else
      aws ec2 detach-network-interface --attachment-id $attachment_id
      sleep 15
    fi

    if [ $? -eq 0 ]; then
        return $OCF_SUCCESS
    else
        return $OCF_ERR_GENERIC
    fi
}

monitor() {
    ifconfig | grep $VIP

    if [ $? -eq 0 ]; then
        return $OCF_SUCCESS
    else
        return $OCF_NOT_RUNNING
    fi
}

case $__OCF_ACTION in
    meta-data)
        meta_data
        exit $OCF_SUCCESS
        ;;
    start)
        start
        exit $?
        ;;
    stop)
        stop
        exit $?
        ;;
    monitor)
        monitor
        exit $?
        ;;
    *)
        echo "Uso: $0 {start|stop|monitor|meta-data}"
        exit $OCF_ERR_UNIMPLEMENTED
        ;;
esac
